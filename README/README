
Wandermate Project: README 
Developed by: -Usman Haider
GitHub Repository: Usman11611

Overview
Wandermate is a comprehensive web-based application designed to help users plan their travels effortlessly. It provides a seamless experience by offering features such as trip creation, location selection (with auto-filling dropdowns for countries, states, and cities), weather information, and user role management. This project leverages real-time data fetched via the OpenWeather API, dynamic user authentication, and an intuitive chatbot for support. The application uses a MySQL database to store user data, travel plans, and other related information.

This README will guide you through the setup process, provide a detailed explanation of the application's features, and offer insight into the technology stack that powers Wandermate.

Key Features
1. User Authentication & Role Management
User Login/Logout:
Users can sign up, log in, and log out of the platform securely. Login is managed via PHP sessions, with password hashing handled by bcrypt for enhanced security.

Code Snippet (Login PHP):


if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $email = mysqli_real_escape_string($con, $_POST['email']);
    $password = $_POST['password'];
    $query = "SELECT * FROM users WHERE email='$email'";
    $result = mysqli_query($con, $query);
    if ($result && mysqli_num_rows($result) > 0) {
        $user = mysqli_fetch_assoc($result);
        if (password_verify($password, $user['password'])) {
            $_SESSION['user_id'] = $user['id'];
            $_SESSION['role'] = $user['role']; 
            header("Location: wandermate.php");
            exit();
        } else {
            $error = "Invalid email or password.";
        }
    } else {
        $error = "Invalid email or password.";
    }
}
User Roles:
The system distinguishes between regular users and administrators. Regular users can only access and modify their travel data, while administrators can access, modify, and delete data across all users.

SQL Snippet (User Table with Role):


CREATE TABLE users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    first_name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL,
    role ENUM('user', 'admin') DEFAULT 'user' NOT NULL
);
2. Travel Plan Management
Plan Creation and Management:
Users can create new travel plans, edit existing plans, and delete them. A plan includes the trip name, travel dates, destination (country, state, and city), activities, and budget.

Code Snippet (Plan Creation Form):


<form action="make_a_plan.php" method="POST">
    <label for="trip-name">Trip Name</label>
    <input type="text" id="trip-name" name="trip_name" required>
    
    <label for="start-date">Start Date</label>
    <input type="date" id="start-date" name="start_date" required>
    
    <label for="end-date">End Date</label>
    <input type="date" id="end-date" name="end_date" required>
    
    <label for="budget">Budget</label>
    <input type="number" id="budget" name="budget" required>
    
    <!-- Country, State, and City selection -->
    <select id="country" name="country" required>
        <option value="">Select Country...</option>
    </select>
    <select id="state" name="state" required disabled>
        <option value="">Select State...</option>
    </select>
    <select id="city" name="city" required disabled>
        <option value="">Select City...</option>
    </select>

    <button type="submit">Save Plan</button>
</form>
3. Weather API Integration (OpenWeather)
Weather Data Integration:
Wandermate integrates with the OpenWeather API to provide real-time weather updates for cities. This feature helps users plan their trips based on weather forecasts, ensuring they are prepared for their destination's conditions.

Code Snippet (Weather Fetching via AJAX):


function fetchWeather(city) {
    $.ajax({
        url: `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=YOUR_API_KEY`,
        method: 'GET',
        success: function(response) {
            const weather = response.weather[0].description;
            $('#weather-info').html(`Weather: ${weather}`);
        }
    });
}
4. Help Section & Chatbot
Chatbot Integration:
The Help section is powered by a chatbot that guides users in navigating the platform, answering questions, and providing assistance for common issues such as login problems, account management, or trip planning.

Chatbot Code Example:


<!-- Chatbot Button -->
<button id="chatbotBtn" onclick="openChatbot()">Chat with us</button>

<script>
    function openChatbot() {
        // Open chatbot window
        window.open('chatbot.html', '_blank', 'width=400,height=600');
    }
</script>
5. Searchable Dropdowns (Select2)
Dynamic Location Fields:
The application allows users to select countries, states, and cities from dynamic dropdowns powered by the Select2 plugin. This enables users to search and select the relevant options quickly and efficiently.

Code Snippet (Select2 Initialization):


$(".searchable-dropdown").select2({
    placeholder: "Search and select...",
    width: "100%",
    allowClear: true,
    matcher: function(params, data) {
        if ($.trim(params.term) === '') {
            return data;
        }
        if (data.text.toLowerCase().includes(params.term.toLowerCase())) {
            return data;
        }
        return null;
    }
});
6. Admin Dashboard
Admin Features:
Admins have special access to a dashboard where they can manage users, view all travel plans, and oversee activities on the platform. Admins can also delete inappropriate content or suspend user accounts.

Admin Role Code:

if ($_SESSION['role'] === 'admin') {
    // Display Admin Dashboard
    echo "Welcome, Admin! You can manage users here.";
}
7. Responsive Design
The application is mobile-first, ensuring it works well on all devices, including smartphones, tablets, and desktops. The layout adjusts dynamically based on the screen size, providing an optimal user experience on any device.

Responsive Design Example:

@media (max-width: 768px) {
    .navbar {
        flex-direction: column;
        align-items: flex-start;
    }
}
8. User Data Security & Privacy
Password Hashing & Session Management:
User passwords are securely hashed using bcrypt to ensure that even if the database is compromised, passwords are not exposed. Additionally, PHP sessions ensure that users are authenticated securely across their interactions with the platform.

Database Schema for Users:

CREATE TABLE users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL,
    role ENUM('user', 'admin') DEFAULT 'user'
);
9. Payment Integration
Subscription Features:
Some premium features of the platform, such as advanced analytics or extra storage, require a paid subscription. Payment details are handled through third-party providers, ensuring secure transactions.

SQL Snippet for Payment Table:

CREATE TABLE payments (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    amount DECIMAL(10, 2),
    payment_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id)
);
10. Data Security and Privacy Policy
Privacy Policy Compliance:
Wandermate complies with all privacy regulations by offering a comprehensive Privacy Policy. Users have control over their data and can request deletion of their account and associated information.

Privacy Policy Code Snippet:


<p>Your privacy is important to us. By using our service, you agree to our <a href="privacy.php">Privacy Policy</a> which explains how we collect, use, and protect your data.</p>
Technology Stack
Frontend: HTML5, CSS3, JavaScript, JQuery, Select2 (for dropdown functionality)
Backend: PHP (for server-side operations and user authentication)
Database: MySQL (for storing user and application data)
API: OpenWeather API (for weather updates)
Authentication: PHP sessions with bcrypt hashing for secure login
Security: SSL/TLS encryption, password hashing
Setup Instructions
Prerequisites
Web Server: Install XAMPP, WAMP, or any PHP-compatible server to run the application.
MySQL Database: Ensure you have MySQL/MariaDB installed to host the database.
OpenWeather API Key: Sign up for an API key from OpenWeather to enable weather functionality.
Installation Steps
Clone or Download the Repository: Clone the project repository or download it as a ZIP file.


git clone https://github.com/Usman11611/wandermate.git
Set Up the Database:
Import the SQL file into your MySQL database. The schema provided will set up the necessary tables for user management, payments, and travel plans.

Configure the API:
Replace YOUR_API_KEY in the JavaScript code with your actual OpenWeather API key.

Run the Application:
Start your local server and navigate to the project directory in your browser. Ensure all services are running correctly.

Conclusion
Wandermate is a robust and scalable travel management application that combines the power of modern web technologies with real-time APIs, user role management, and secure authentication. Whether you're a traveler planning your next adventure or an administrator overseeing the platform, Wandermate offers a comprehensive suite of features to make travel planning simpler and more efficient.

For further details, contributions, or issues, please visit the GitHub Repository.



Creator
Usman Haider - Developer and Designer
